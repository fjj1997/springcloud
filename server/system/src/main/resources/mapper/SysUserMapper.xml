<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cddx.mapper.SysUserMapper">

    <sql id="BaseSql">
        select id, username, telephone, password, login_ip, login_time, status,
               create_id, create_time, last_update_id, last_update_time,
               del_flag
        from sys_user su
    </sql>

    <select id="selectUserByPhone" resultType="com.cddx.domain.entity.SysUser">
        <include refid="BaseSql" />
        where su.telephone = #{phone} and su.del_flag = 0
    </select>


    <resultMap id="UserListVo" type="com.cddx.domain.vo.UserVo">
        <id column="id" property="userId" />
        <result column="username" property="username" />
        <result column="telephone" property="telephone" />
        <result column="status" property="status" />
        <result column="role_id" property="roleId" />
        <result column="role_name" property="roleName" />
        <result column="dept_id" property="deptId" />
        <result column="dept_name" property="deptName" />
        <result column="create_time" property="createTime" />
        <result column="create_name" property="createName" />
    </resultMap>

    <sql id="SysUserVo">
        select distinct su.id, su.username, su.telephone, su.`status`, su.create_time, csu.username as `create_name`,
                        sr.id as `role_id`, sr.role_name as `role_name`,
                        sd.id as `dept_id`, sd.`name` as `dept_name`
        from sys_user su
                 left join sys_user_role sur on su.id = sur.user_id
                 left join sys_role sr on sr.id = sur.role_id and sr.del_flag = 0
                 left join sys_user_dept sud on su.id = sud.user_id
                 left join sys_dept sd on sd.id = sud.dept_id and sd.del_flag = 0
                 left join sys_user csu on su.create_id = csu.id
    </sql>

    <select id="queryUserList" parameterType="com.cddx.domain.dto.ListUserDto" resultMap="UserListVo">
        <include refid="SysUserVo" />
        <where>
            # 排除内置账号
            su.id != 1 and su.del_flag = 0
            <if test="username != null and username != ''">
                and su.username like concat('%', #{username}, '%')
            </if>
            <if test="deptId != null">
                and sud.dept_id in (#{deptId})
            </if>
            <if test="roleId != null">
                and sur.role_id in (#{roleId})
            </if>
        </where>
    </select>

    <select id="queryUserByUserId" parameterType="Long" resultMap="UserListVo">
        <include refid="SysUserVo" />
        <where>
            su.id = #{userId} and su.del_flag = 0
        </where>
    </select>

    <select id="selectExistByUser" resultType="com.cddx.domain.entity.SysUser">
        <include refid="BaseSql" />
        <where>
            <if test="telephone != null and telephone != ''">
                and telephone = #{telephone}
            </if>
            and del_flag = 0
        </where>
    </select>

    <update id="changePassword">
        update sys_user
        <set>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="lastUpdateId != null ">last_update_id = #{lastUpdateId},</if>
            <if test="lastUpdateTime != null ">last_update_time = #{lastUpdateTime},</if>
        </set>
        where id = #{id}
    </update>

</mapper>